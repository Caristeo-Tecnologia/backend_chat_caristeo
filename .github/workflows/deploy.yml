name: Deploy to ECS

on:
  push:
    branches:
      - feat/deploy_new_version

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_URL: ${{ secrets.ECR_URL }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL

      - name: Build and push Docker image to ECR
        env:
          ECR_URL: ${{ secrets.ECR_URL }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker build -t chat_caristeo .
          docker tag chat_caristeo:latest $ECR_URL/chat_caristeo:latest
          docker push $ECR_URL/chat_caristeo:latest

      - name: Update ECS task definition and force deployment
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          ECR_URL: ${{ secrets.ECR_URL }}
        run: |
          # Register a new task definition revision
          NEW_TASK_REVISION=$(aws ecs register-task-definition \
            --family chat_caristeo_task \
            --network-mode awsvpc \
            --container-definitions '[{
              "name": "chat_caristeo",
              "image": "'$ECR_URL'/chat_caristeo:latest",
              "essential": true,
              "memory": 512,
              "cpu": 256,
              "portMappings": [
                {"containerPort": 9000, "hostPort": 9000, "protocol": "tcp"},
                {"containerPort": 8080, "hostPort": 8080, "protocol": "tcp"}
              ],
              "environment": [
                {"name": "NODE_ENV", "value": "production"},
                {"name": "BACKEND_URL", "value": "http://localhost"},
                {"name": "FRONTEND_URL", "value": "https://main.d1usb2ouxvps6t.amplifyapp.com"},
                {"name": "PROXY_PORT", "value": "8080"},
                {"name": "PORT", "value": "9000"},
                {"name": "DB_DIALECT", "value": "postgres"},
                {"name": "DB_HOST", "value": "'${{ secrets.DB_HOST }}'"},
                {"name": "DB_PORT", "value": "5432"},
                {"name": "DB_USER", "value": "'${{ secrets.DB_USER }}'"},
                {"name": "DB_PASS", "value": "'${{ secrets.DB_PASS }}'"},
                {"name": "DB_NAME", "value": "'${{ secrets.DB_NAME }}'"},
                {"name": "JWT_SECRET", "value": "'${{ secrets.JWT_SECRET }}'"},
                {"name": "REDIS_URI", "value": "'${{ secrets.REDIS_URI }}'"}
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/chat_caristeo-logs",
                  "awslogs-region": "'$AWS_REGION'",
                  "awslogs-stream-prefix": "ecs"
                }
              }
            }]' \
            --requires-compatibilities FARGATE \
            --cpu "256" \
            --memory "512" \
            --execution-role-arn arn:aws:iam::861276092440:role/ecsTaskExecutionRole \
            --task-role-arn arn:aws:iam::861276092440:role/ecsTaskExecutionRole \
            --query 'taskDefinition.revision' --output text)

          echo "New task revision: $NEW_TASK_REVISION"

          # Update the ECS service with the new task definition
          aws ecs update-service \
            --cluster chat_caristeo_cluster \
            --service chat_caristeo_service01 \
            --task-definition chat_caristeo_task:${NEW_TASK_REVISION} \
            --force-new-deployment \
            --region $AWS_REGION
